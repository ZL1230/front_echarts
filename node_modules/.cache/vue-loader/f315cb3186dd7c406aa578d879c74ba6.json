{"remainingRequest":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Hot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Hot.vue","mtime":1602319182000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IHsgZ2V0VGhlbWVWYWx1ZSB9IGZyb20gJ0AvdXRpbHMvdGhlbWVfdXRpbHMnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsCiAgICAgIGFsbERhdGE6IG51bGwsCiAgICAgIGN1cnJlbnRJbmRleDogMCwgLy8g5b2T5YmN5omA5bGV56S65Ye655qE5LiA57qn5YiG57G75pWw5o2uCiAgICAgIHRpdGxlRm9udFNpemU6IDAKICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCOIOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjAogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ2hvdERhdGEnLCB0aGlzLmdldERhdGEpCiAgfSwKICBjb21wdXRlZDogewogICAgY2F0TmFtZSAoKSB7CiAgICAgIGlmICghdGhpcy5hbGxEYXRhKSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0ubmFtZQogICAgICB9CiAgICB9LAogICAgY29tU3R5bGUgKCkgewogICAgICByZXR1cm4gewogICAgICAgIGZvbnRTaXplOiB0aGlzLnRpdGxlRm9udFNpemUgKyAncHgnLAogICAgICAgIGNvbG9yOiBnZXRUaGVtZVZhbHVlKHRoaXMudGhlbWUpLnRpdGxlQ29sb3IKICAgICAgfQogICAgfSwKICAgIC4uLm1hcFN0YXRlKFsndGhlbWUnXSkKICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5pbml0Q2hhcnQoKQogICAgLy8gdGhpcy5nZXREYXRhKCkKICAgIHRoaXMuJHNvY2tldC5zZW5kKHsKICAgICAgYWN0aW9uOiAnZ2V0RGF0YScsCiAgICAgIHNvY2tldFR5cGU6ICdob3REYXRhJywKICAgICAgY2hhcnROYW1lOiAnaG90JywKICAgICAgdmFsdWU6ICcnCiAgICB9KQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpCiAgfSwKICBkZXN0cm95ZWQgKCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikKICAgIHRoaXMuJHNvY2tldC51blJlZ2lzdGVyQ2FsbEJhY2soJ2hvdERhdGEnKQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENoYXJ0ICgpIHsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuaG90X3JlZiwgdGhpcy50aGVtZSkKICAgICAgY29uc3QgaW5pdE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+KWjiDng63plIDllYblk4HnmoTljaDmr5QnLAogICAgICAgICAgbGVmdDogMjAsCiAgICAgICAgICB0b3A6IDIwCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIHRvcDogJzE1JScsCiAgICAgICAgICBpY29uOiAnY2lyY2xlJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGZvcm1hdHRlcjogYXJnID0+IHsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYXJnKQogICAgICAgICAgICBjb25zdCB0aGlyZENhdGVnb3J5ID0gYXJnLmRhdGEuY2hpbGRyZW4KICAgICAgICAgICAgLy8g6K6h566X5Ye65omA5pyJ5LiJ57qn5YiG57G755qE5pWw5YC85oC75ZKMCiAgICAgICAgICAgIGxldCB0b3RhbCA9IDAKICAgICAgICAgICAgdGhpcmRDYXRlZ29yeS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgIHRvdGFsICs9IGl0ZW0udmFsdWUKICAgICAgICAgICAgfSkKICAgICAgICAgICAgbGV0IHJldFN0ciA9ICcnCiAgICAgICAgICAgIHRoaXJkQ2F0ZWdvcnkuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICByZXRTdHIgKz0gYAogICAgICAgICAgICAgICR7aXRlbS5uYW1lfToke3BhcnNlSW50KGl0ZW0udmFsdWUgLyB0b3RhbCAqIDEwMCkgKyAnJSd9CiAgICAgICAgICAgICAgPGJyLz4KICAgICAgICAgICAgICBgCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHJldHVybiByZXRTdHIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBsYWJlbExpbmU6IHsKICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oaW5pdE9wdGlvbikKICAgIH0sCiAgICBnZXREYXRhIChyZXQpIHsKICAgICAgLy8g6I635Y+W5pyN5Yqh5Zmo55qE5pWw5o2uLCDlr7l0aGlzLmFsbERhdGHov5vooYzotYvlgLzkuYvlkI4sIOiwg+eUqHVwZGF0ZUNoYXJ05pa55rOV5pu05paw5Zu+6KGoCiAgICAgIC8vIGNvbnN0IHsgZGF0YTogcmV0IH0gPSBhd2FpdCB0aGlzLiRodHRwLmdldCgnaG90cHJvZHVjdCcpCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldAogICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpCiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKQogICAgfSwKICAgIHVwZGF0ZUNoYXJ0ICgpIHsKICAgICAgLy8g5aSE55CG5Zu+6KGo6ZyA6KaB55qE5pWw5o2uCiAgICAgIGNvbnN0IGxlZ2VuZERhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lCiAgICAgIH0pCiAgICAgIGNvbnN0IHNlcmllc0RhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgbmFtZTogaXRlbS5uYW1lLAogICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsCiAgICAgICAgICBjaGlsZHJlbjogaXRlbS5jaGlsZHJlbiAvLyDmlrDlop7liqBjaGlsZHJlbueahOWOn+WboOaYr+S4uuS6huWcqHRvb2x0aXDkuK3nmoRmb3JtYXR0ZXLnmoTlm57osIPlh73mlbDkuK0s5p2l5ou/5Yiw6L+Z5Liq5LqM57qn5YiG57G75LiL55qE5LiJ57qn5YiG57G75pWw5o2uCiAgICAgICAgfQogICAgICB9KQogICAgICBjb25zdCBkYXRhT3B0aW9uID0gewogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogbGVnZW5kRGF0YQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIGRhdGE6IHNlcmllc0RhdGEKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKQogICAgfSwKICAgIHNjcmVlbkFkYXB0ZXIgKCkgewogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLmhvdF9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjYKICAgICAgY29uc3QgYWRhcHRlck9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLnRpdGxlRm9udFNpemUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgaXRlbVdpZHRoOiB0aGlzLnRpdGxlRm9udFNpemUsCiAgICAgICAgICBpdGVtSGVpZ2h0OiB0aGlzLnRpdGxlRm9udFNpemUsCiAgICAgICAgICBpdGVtR2FwOiB0aGlzLnRpdGxlRm9udFNpemUgLyAyLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLnRpdGxlRm9udFNpemUgLyAyCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmFkaXVzOiB0aGlzLnRpdGxlRm9udFNpemUgKiA0LjUsCiAgICAgICAgICAgIGNlbnRlcjogWyc1MCUnLCAnNjAlJ10KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UucmVzaXplKCkKICAgIH0sCiAgICB0b0xlZnQgKCkgewogICAgICB0aGlzLmN1cnJlbnRJbmRleC0tCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA8IDApIHsKICAgICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxCiAgICAgIH0KICAgICAgdGhpcy51cGRhdGVDaGFydCgpCiAgICB9LAogICAgdG9SaWdodCAoKSB7CiAgICAgIHRoaXMuY3VycmVudEluZGV4KysKICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4ID4gdGhpcy5hbGxEYXRhLmxlbmd0aCAtIDEpIHsKICAgICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IDAKICAgICAgfQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB0aGVtZSAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCfkuLvpopjliIfmjaLkuoYnKQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UuZGlzcG9zZSgpIC8vIOmUgOavgeW9k+WJjeeahOWbvuihqAogICAgICB0aGlzLmluaXRDaGFydCgpIC8vIOmHjeaWsOS7peacgOaWsOeahOS4u+mimOWQjeensOWIneWni+WMluWbvuihqOWvueixoQogICAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKSAvLyDlrozmiJDlsY/luZXnmoTpgILphY0KICAgICAgdGhpcy51cGRhdGVDaGFydCgpIC8vIOabtOaWsOWbvuihqOeahOWxleekugogICAgfQogIH0KfQo="},{"version":3,"sources":["Hot.vue"],"names":[],"mappingsfile":"Hot.vue","sourceRoot":"src/components","sourcesContent":["<!-- 热销商品图表 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='hot_ref'></div>\n    <span class=\"iconfont arr-left\" @click=\"toLeft\" :style=\"comStyle\">&#xe6ef;</span>\n    <span class=\"iconfont arr-right\" @click=\"toRight\" :style=\"comStyle\">&#xe6ed;</span>\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { getThemeValue } from '@/utils/theme_utils'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      currentIndex: 0, // 当前所展示出的一级分类数据\n      titleFontSize: 0\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('hotData', this.getData)\n  },\n  computed: {\n    catName () {\n      if (!this.allData) {\n        return ''\n      } else {\n        return this.allData[this.currentIndex].name\n      }\n    },\n    comStyle () {\n      return {\n        fontSize: this.titleFontSize + 'px',\n        color: getThemeValue(this.theme).titleColor\n      }\n    },\n    ...mapState(['theme'])\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'hotData',\n      chartName: 'hot',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('hotData')\n  },\n  methods: {\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.hot_ref, this.theme)\n      const initOption = {\n        title: {\n          text: '▎ 热销商品的占比',\n          left: 20,\n          top: 20\n        },\n        legend: {\n          top: '15%',\n          icon: 'circle'\n        },\n        tooltip: {\n          show: true,\n          formatter: arg => {\n            // console.log(arg)\n            const thirdCategory = arg.data.children\n            // 计算出所有三级分类的数值总和\n            let total = 0\n            thirdCategory.forEach(item => {\n              total += item.value\n            })\n            let retStr = ''\n            thirdCategory.forEach(item => {\n              retStr += `\n              ${item.name}:${parseInt(item.value / total * 100) + '%'}\n              <br/>\n              `\n            })\n            return retStr\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            label: {\n              show: false\n            },\n            emphasis: {\n              label: {\n                show: true\n              },\n              labelLine: {\n                show: false\n              }\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(initOption)\n    },\n    getData (ret) {\n      // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n      // const { data: ret } = await this.$http.get('hotproduct')\n      this.allData = ret\n      console.log(this.allData)\n      this.updateChart()\n    },\n    updateChart () {\n      // 处理图表需要的数据\n      const legendData = this.allData[this.currentIndex].children.map(item => {\n        return item.name\n      })\n      const seriesData = this.allData[this.currentIndex].children.map(item => {\n        return {\n          name: item.name,\n          value: item.value,\n          children: item.children // 新增加children的原因是为了在tooltip中的formatter的回调函数中,来拿到这个二级分类下的三级分类数据\n        }\n      })\n      const dataOption = {\n        legend: {\n          data: legendData\n        },\n        series: [\n          {\n            data: seriesData\n          }\n        ]\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      this.titleFontSize = this.$refs.hot_ref.offsetWidth / 100 * 3.6\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: this.titleFontSize\n          }\n        },\n        legend: {\n          itemWidth: this.titleFontSize,\n          itemHeight: this.titleFontSize,\n          itemGap: this.titleFontSize / 2,\n          textStyle: {\n            fontSize: this.titleFontSize / 2\n          }\n        },\n        series: [\n          {\n            radius: this.titleFontSize * 4.5,\n            center: ['50%', '60%']\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    toLeft () {\n      this.currentIndex--\n      if (this.currentIndex < 0) {\n        this.currentIndex = this.allData.length - 1\n      }\n      this.updateChart()\n    },\n    toRight () {\n      this.currentIndex++\n      if (this.currentIndex > this.allData.length - 1) {\n        this.currentIndex = 0\n      }\n      this.updateChart()\n    }\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n.arr-left {\n  position:absolute;\n  left: 10%;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: white;\n}\n.arr-right {\n  position:absolute;\n  right: 10%;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: white;\n}\n.cat-name {\n  position:absolute;\n  left: 80%;\n  bottom: 20px;\n  color: white;\n}\n</style>\n"]}]}