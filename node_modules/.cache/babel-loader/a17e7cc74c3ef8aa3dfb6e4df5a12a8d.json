{"remainingRequest":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Seller.vue","mtime":1602319182000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvaXRyeWwvRGVza3RvcC9wcm9qZWN0cy92aXNpb24tcHJvamVjdC92aXNpb25cdTUzOUZcdTcyNDgvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsCiAgICAgIGFsbERhdGE6IG51bGwsCiAgICAgIC8vIOacjeWKoeWZqOi/lOWbnueahOaVsOaNrgogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgLy8g5b2T5YmN5pi+56S655qE6aG15pWwCiAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgLy8g5LiA5YWx5pyJ5aSa5bCR6aG1CiAgICAgIHRpbWVySWQ6IG51bGwgLy8g5a6a5pe25Zmo55qE5qCH6K+GCgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvLyDlnKjnu4Tku7bliJvlu7rlrozmiJDkuYvlkI4g6L+b6KGM5Zue6LCD5Ye95pWw55qE5rOo5YaMCiAgICB0aGlzLiRzb2NrZXQucmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScsIHRoaXMuZ2V0RGF0YSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q2hhcnQoKTsgLy8gdGhpcy5nZXREYXRhKCkKCiAgICB0aGlzLiRzb2NrZXQuc2VuZCh7CiAgICAgIGFjdGlvbjogJ2dldERhdGEnLAogICAgICBzb2NrZXRUeXBlOiAnc2VsbGVyRGF0YScsCiAgICAgIGNoYXJ0TmFtZTogJ3NlbGxlcicsCiAgICAgIHZhbHVlOiAnJwogICAgfSk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsgLy8g5Zyo6aG16Z2i5Yqg6L295a6M5oiQ55qE5pe25YCZLCDkuLvliqjov5vooYzlsY/luZXnmoTpgILphY0KCiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySWQpOyAvLyDlnKjnu4Tku7bplIDmr4HnmoTml7blgJksIOmcgOimgeWwhuebkeWQrOWZqOWPlua2iOaOiQoKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogICAgdGhpcy4kc29ja2V0LnVuUmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g5Yid5aeL5YyWZWNoYXJ0SW5zdGFuY2Xlr7nosaEKICAgIGluaXRDaGFydDogZnVuY3Rpb24gaW5pdENoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VsbGVyX3JlZiwgdGhpcy50aGVtZSk7IC8vIOWvueWbvuihqOWIneWni+WMlumFjee9rueahOaOp+WItgoKICAgICAgdmFyIGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfilo7llYblrrbplIDllK7nu5/orqEnLAogICAgICAgICAgbGVmdDogMjAsCiAgICAgICAgICB0b3A6IDIwCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICB0b3A6ICcyMCUnLAogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNiUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlIC8vIOi3neemu+aYr+WMheWQq+WdkOagh+i9tOS4iueahOaWh+WtlwoKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICB6OiAwLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyMyRDM0NDMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgcG9zaXRpb246ICdyaWdodCcsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgLy8g5oyH5piO6aKc6Imy5riQ5Y+Y55qE5pa55ZCRCiAgICAgICAgICAgIC8vIOaMh+aYjuS4jeWQjOeZvuWIhuavlOS5i+S4i+minOiJsueahOWAvAogICAgICAgICAgICBjb2xvcjogbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAxLCAwLCBbLy8g55m+5YiG5LmLMOeKtuaAgeS5i+S4i+eahOminOiJsuWAvAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgIGNvbG9yOiAnIzUwNTJFRScKICAgICAgICAgICAgfSwgLy8g55m+5YiG5LmLMTAw54q25oCB5LmL5LiL55qE6aKc6Imy5YC8CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgY29sb3I6ICcjQUI2RUU1JwogICAgICAgICAgICB9XSkKICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pOyAvLyDlr7nlm77ooajlr7nosaHov5vooYzpvKDmoIfkuovku7bnmoTnm5HlkKwKCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5vbignbW91c2VvdmVyJywgZnVuY3Rpb24gKCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMudGltZXJJZCk7CiAgICAgIH0pOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3V0JywgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnN0YXJ0SW50ZXJ2YWwoKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5pyN5Yqh5Zmo55qE5pWw5o2uCiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHJldCkgewogICAgICAvLyBodHRwOi8vMTI3LjAuMC4xOjg4ODgvYXBpL3NlbGxlcgogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3NlbGxlcicpCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldDsgLy8g5a+55pWw5o2u5o6S5bqPCgogICAgICB0aGlzLmFsbERhdGEuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZTsgLy8g5LuO5bCP5Yiw5aSn55qE5o6S5bqPCiAgICAgIH0pOyAvLyDmr4815Liq5YWD57Sg5pi+56S65LiA6aG1CgogICAgICB0aGlzLnRvdGFsUGFnZSA9IHRoaXMuYWxsRGF0YS5sZW5ndGggJSA1ID09PSAwID8gdGhpcy5hbGxEYXRhLmxlbmd0aCAvIDUgOiB0aGlzLmFsbERhdGEubGVuZ3RoIC8gNSArIDE7CiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsgLy8g5ZCv5Yqo5a6a5pe25ZmoCgogICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWwoKTsKICAgIH0sCiAgICAvLyDmm7TmlrDlm77ooagKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIHN0YXJ0ID0gKHRoaXMuY3VycmVudFBhZ2UgLSAxKSAqIDU7CiAgICAgIHZhciBlbmQgPSB0aGlzLmN1cnJlbnRQYWdlICogNTsKICAgICAgdmFyIHNob3dEYXRhID0gdGhpcy5hbGxEYXRhLnNsaWNlKHN0YXJ0LCBlbmQpOwogICAgICB2YXIgc2VsbGVyTmFtZXMgPSBzaG93RGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lOwogICAgICB9KTsKICAgICAgdmFyIHNlbGxlclZhbHVlcyA9IHNob3dEYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnZhbHVlOwogICAgICB9KTsKICAgICAgdmFyIGRhdGFPcHRpb24gPSB7CiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIGRhdGE6IHNlbGxlck5hbWVzCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiBzZWxsZXJWYWx1ZXMKICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGRhdGFPcHRpb24pOwogICAgfSwKICAgIHN0YXJ0SW50ZXJ2YWw6IGZ1bmN0aW9uIHN0YXJ0SW50ZXJ2YWwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudGltZXJJZCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKTsKICAgICAgfQoKICAgICAgdGhpcy50aW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jdXJyZW50UGFnZSsrOwoKICAgICAgICBpZiAoX3RoaXMyLmN1cnJlbnRQYWdlID4gX3RoaXMyLnRvdGFsUGFnZSkgewogICAgICAgICAgX3RoaXMyLmN1cnJlbnRQYWdlID0gMTsKICAgICAgICB9CgogICAgICAgIF90aGlzMi51cGRhdGVDaGFydCgpOwogICAgICB9LCAzMDAwKTsKICAgIH0sCiAgICAvLyDlvZPmtY/op4jlmajnmoTlpKflsI/lj5HnlJ/lj5jljJbnmoTml7blgJksIOS8muiwg+eUqOeahOaWueazlSwg5p2l5a6M5oiQ5bGP5bmV55qE6YCC6YWNCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGgpCiAgICAgIHZhciB0aXRsZUZvbnRTaXplID0gdGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoIC8gMTAwICogMy42OyAvLyDlkozliIbovqjnjoflpKflsI/nm7jlhbPnmoTphY3nva7pobkKCiAgICAgIHZhciBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIHdpZHRoOiB0aXRsZUZvbnRTaXplCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIGJhcldpZHRoOiB0aXRsZUZvbnRTaXplLAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogWzAsIHRpdGxlRm9udFNpemUgLyAyLCB0aXRsZUZvbnRTaXplIC8gMiwgMF0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGFkYXB0ZXJPcHRpb24pOyAvLyDmiYvliqjnmoTosIPnlKjlm77ooajlr7nosaHnmoRyZXNpemUg5omN6IO95Lqn55Sf5pWI5p6cCgogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UucmVzaXplKCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd0aGVtZSddKSksCiAgd2F0Y2g6IHsKICAgIHRoZW1lOiBmdW5jdGlvbiB0aGVtZSgpIHsKICAgICAgY29uc29sZS5sb2coJ+S4u+mimOWIh+aNouS6hicpOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UuZGlzcG9zZSgpOyAvLyDplIDmr4HlvZPliY3nmoTlm77ooagKCiAgICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIOmHjeaWsOS7peacgOaWsOeahOS4u+mimOWQjeensOWIneWni+WMluWbvuihqOWvueixoQoKICAgICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7IC8vIOWujOaIkOWxj+W5leeahOmAgumFjQoKICAgICAgdGhpcy51cGRhdGVDaGFydCgpOyAvLyDmm7TmlrDlm77ooajnmoTlsZXnpLoKICAgIH0KICB9Cn07"},{"version":3,"sources":["Seller.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 商家销量统计的横向柱状图 -->\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"seller_ref\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null, // 服务器返回的数据\n      currentPage: 1, // 当前显示的页数\n      totalPage: 0, // 一共有多少页\n      timerId: null // 定时器的标识\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('sellerData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'sellerData',\n      chartName: 'seller',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    // 在页面加载完成的时候, 主动进行屏幕的适配\n    this.screenAdapter()\n  },\n  destroyed () {\n    clearInterval(this.timerId)\n    // 在组件销毁的时候, 需要将监听器取消掉\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('sellerData')\n  },\n  methods: {\n    // 初始化echartInstance对象\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\n      // 对图表初始化配置的控制\n      const initOption = {\n        title: {\n          text: '▎商家销售统计',\n          left: 20,\n          top: 20\n        },\n        grid: {\n          top: '20%',\n          left: '3%',\n          right: '6%',\n          bottom: '3%',\n          containLabel: true // 距离是包含坐标轴上的文字\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'line',\n            z: 0,\n            lineStyle: {\n              color: '#2D3443'\n            }\n          }\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              show: true,\n              position: 'right',\n              textStyle: {\n                color: 'white'\n              }\n            },\n            itemStyle: {\n              // 指明颜色渐变的方向\n              // 指明不同百分比之下颜色的值\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\n                // 百分之0状态之下的颜色值\n                {\n                  offset: 0,\n                  color: '#5052EE'\n                },\n                // 百分之100状态之下的颜色值\n                {\n                  offset: 1,\n                  color: '#AB6EE5'\n                }\n              ])\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(initOption)\n      // 对图表对象进行鼠标事件的监听\n      this.chartInstance.on('mouseover', () => {\n        clearInterval(this.timerId)\n      })\n      this.chartInstance.on('mouseout', () => {\n        this.startInterval()\n      })\n    },\n    // 获取服务器的数据\n    getData (ret) {\n      // http://127.0.0.1:8888/api/seller\n      // const { data: ret } = await this.$http.get('seller')\n      this.allData = ret\n      // 对数据排序\n      this.allData.sort((a, b) => {\n        return a.value - b.value // 从小到大的排序\n      })\n      // 每5个元素显示一页\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\n      this.updateChart()\n      // 启动定时器\n      this.startInterval()\n    },\n    // 更新图表\n    updateChart () {\n      const start = (this.currentPage - 1) * 5\n      const end = this.currentPage * 5\n      const showData = this.allData.slice(start, end)\n      const sellerNames = showData.map((item) => {\n        return item.name\n      })\n      const sellerValues = showData.map((item) => {\n        return item.value\n      })\n      const dataOption = {\n        yAxis: {\n          data: sellerNames\n        },\n        series: [\n          {\n            data: sellerValues\n          }\n        ]\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    startInterval () {\n      if (this.timerId) {\n        clearInterval(this.timerId)\n      }\n      this.timerId = setInterval(() => {\n        this.currentPage++\n        if (this.currentPage > this.totalPage) {\n          this.currentPage = 1\n        }\n        this.updateChart()\n      }, 3000)\n    },\n    // 当浏览器的大小发生变化的时候, 会调用的方法, 来完成屏幕的适配\n    screenAdapter () {\n      // console.log(this.$refs.seller_ref.offsetWidth)\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\n      // 和分辨率大小相关的配置项\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        tooltip: {\n          axisPointer: {\n            lineStyle: {\n              width: titleFontSize\n            }\n          }\n        },\n        series: [\n          {\n            barWidth: titleFontSize,\n            itemStyle: {\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      // 手动的调用图表对象的resize 才能产生效果\n      this.chartInstance.resize()\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"],"sourceRoot":"src/components"}]}