{"remainingRequest":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Hot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Hot.vue","mtime":1602319182000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL2l0cnlsL0Rlc2t0b3AvcHJvamVjdHMvdmlzaW9uLXByb2plY3QvdmlzaW9uXHU1MzlGXHU3MjQ4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZ2V0VGhlbWVWYWx1ZSB9IGZyb20gJ0AvdXRpbHMvdGhlbWVfdXRpbHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsCiAgICAgIGFsbERhdGE6IG51bGwsCiAgICAgIGN1cnJlbnRJbmRleDogMCwKICAgICAgLy8g5b2T5YmN5omA5bGV56S65Ye655qE5LiA57qn5YiG57G75pWw5o2uCiAgICAgIHRpdGxlRm9udFNpemU6IDAKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCOIOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjAogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ2hvdERhdGEnLCB0aGlzLmdldERhdGEpOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoewogICAgY2F0TmFtZTogZnVuY3Rpb24gY2F0TmFtZSgpIHsKICAgICAgaWYgKCF0aGlzLmFsbERhdGEpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0ubmFtZTsKICAgICAgfQogICAgfSwKICAgIGNvbVN0eWxlOiBmdW5jdGlvbiBjb21TdHlsZSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplICsgJ3B4JywKICAgICAgICBjb2xvcjogZ2V0VGhlbWVWYWx1ZSh0aGlzLnRoZW1lKS50aXRsZUNvbG9yCiAgICAgIH07CiAgICB9CiAgfSwgbWFwU3RhdGUoWyd0aGVtZSddKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIHRoaXMuZ2V0RGF0YSgpCgogICAgdGhpcy4kc29ja2V0LnNlbmQoewogICAgICBhY3Rpb246ICdnZXREYXRhJywKICAgICAgc29ja2V0VHlwZTogJ2hvdERhdGEnLAogICAgICBjaGFydE5hbWU6ICdob3QnLAogICAgICB2YWx1ZTogJycKICAgIH0pOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcik7CiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcik7CiAgICB0aGlzLiRzb2NrZXQudW5SZWdpc3RlckNhbGxCYWNrKCdob3REYXRhJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuaG90X3JlZiwgdGhpcy50aGVtZSk7CiAgICAgIHZhciBpbml0T3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn4paOIOeDremUgOWVhuWTgeeahOWNoOavlCcsCiAgICAgICAgICBsZWZ0OiAyMCwKICAgICAgICAgIHRvcDogMjAKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdG9wOiAnMTUlJywKICAgICAgICAgIGljb246ICdjaXJjbGUnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIoYXJnKSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGFyZykKICAgICAgICAgICAgdmFyIHRoaXJkQ2F0ZWdvcnkgPSBhcmcuZGF0YS5jaGlsZHJlbjsgLy8g6K6h566X5Ye65omA5pyJ5LiJ57qn5YiG57G755qE5pWw5YC85oC75ZKMCgogICAgICAgICAgICB2YXIgdG90YWwgPSAwOwogICAgICAgICAgICB0aGlyZENhdGVnb3J5LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICB0b3RhbCArPSBpdGVtLnZhbHVlOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdmFyIHJldFN0ciA9ICcnOwogICAgICAgICAgICB0aGlyZENhdGVnb3J5LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICByZXRTdHIgKz0gIlxuICAgICAgICAgICAgICAiLmNvbmNhdChpdGVtLm5hbWUsICI6IikuY29uY2F0KHBhcnNlSW50KGl0ZW0udmFsdWUgLyB0b3RhbCAqIDEwMCkgKyAnJScsICJcbiAgICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICAgICAgIik7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gcmV0U3RyOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYWJlbExpbmU6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKTsKICAgIH0sCiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHJldCkgewogICAgICAvLyDojrflj5bmnI3liqHlmajnmoTmlbDmja4sIOWvuXRoaXMuYWxsRGF0Yei/m+ihjOi1i+WAvOS5i+WQjiwg6LCD55SodXBkYXRlQ2hhcnTmlrnms5Xmm7TmlrDlm77ooagKICAgICAgLy8gY29uc3QgeyBkYXRhOiByZXQgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdob3Rwcm9kdWN0JykKICAgICAgdGhpcy5hbGxEYXRhID0gcmV0OwogICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpOwogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9LAogICAgdXBkYXRlQ2hhcnQ6IGZ1bmN0aW9uIHVwZGF0ZUNoYXJ0KCkgewogICAgICAvLyDlpITnkIblm77ooajpnIDopoHnmoTmlbDmja4KICAgICAgdmFyIGxlZ2VuZERhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm5hbWU7CiAgICAgIH0pOwogICAgICB2YXIgc2VyaWVzRGF0YSA9IHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0uY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLAogICAgICAgICAgY2hpbGRyZW46IGl0ZW0uY2hpbGRyZW4gLy8g5paw5aKe5YqgY2hpbGRyZW7nmoTljp/lm6DmmK/kuLrkuoblnKh0b29sdGlw5Lit55qEZm9ybWF0dGVy55qE5Zue6LCD5Ye95pWw5LitLOadpeaLv+WIsOi/meS4quS6jOe6p+WIhuexu+S4i+eahOS4iee6p+WIhuexu+aVsOaNrgoKICAgICAgICB9OwogICAgICB9KTsKICAgICAgdmFyIGRhdGFPcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBsZWdlbmREYXRhCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKTsKICAgIH0sCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLmhvdF9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjY7CiAgICAgIHZhciBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpdGVtV2lkdGg6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1HYXA6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHJhZGl1czogdGhpcy50aXRsZUZvbnRTaXplICogNC41LAogICAgICAgICAgY2VudGVyOiBbJzUwJScsICc2MCUnXQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5yZXNpemUoKTsKICAgIH0sCiAgICB0b0xlZnQ6IGZ1bmN0aW9uIHRvTGVmdCgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXgtLTsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA8IDApIHsKICAgICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9LAogICAgdG9SaWdodDogZnVuY3Rpb24gdG9SaWdodCgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXgrKzsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA+IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxKSB7CiAgICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSAwOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdGhlbWU6IGZ1bmN0aW9uIHRoZW1lKCkgewogICAgICBjb25zb2xlLmxvZygn5Li76aKY5YiH5o2i5LqGJyk7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCk7IC8vIOmUgOavgeW9k+WJjeeahOWbvuihqAoKICAgICAgdGhpcy5pbml0Q2hhcnQoKTsgLy8g6YeN5paw5Lul5pyA5paw55qE5Li76aKY5ZCN56ew5Yid5aeL5YyW5Zu+6KGo5a+56LGhCgogICAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsgLy8g5a6M5oiQ5bGP5bmV55qE6YCC6YWNCgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7IC8vIOabtOaWsOWbvuihqOeahOWxleekugogICAgfQogIH0KfTs="},{"version":3,"sources":["Hot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,aAAA,QAAA,qBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,YAAA,EAAA,CAHA;AAGA;AACA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OATA,qBASA;AACA;AACA,SAAA,OAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,OAAA;AACA,GAZA;AAaA,EAAA,QAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA,eAAA,EAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,OAAA,CAAA,KAAA,YAAA,EAAA,IAAA;AACA;AACA,KAPA;AAQA,IAAA,QARA,sBAQA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KAAA,aAAA,GAAA,IADA;AAEA,QAAA,KAAA,EAAA,aAAA,CAAA,KAAA,KAAA,CAAA,CAAA;AAFA,OAAA;AAIA;AAbA,KAcA,QAAA,CAAA,CAAA,OAAA,CAAA,CAdA,CAbA;AA6BA,EAAA,OA7BA,qBA6BA;AACA,SAAA,SAAA,GADA,CAEA;;AACA,SAAA,OAAA,CAAA,IAAA,CAAA;AACA,MAAA,MAAA,EAAA,SADA;AAEA,MAAA,UAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAMA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,aAAA;AACA,SAAA,aAAA;AACA,GAxCA;AAyCA,EAAA,SAzCA,uBAyCA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,aAAA;AACA,SAAA,OAAA,CAAA,kBAAA,CAAA,SAAA;AACA,GA5CA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,aAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA;AACA,UAAA,UAAA,GAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,IAAA,EAAA,EAFA;AAGA,UAAA,GAAA,EAAA;AAHA,SADA;AAMA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA;AAFA,SANA;AAUA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA,mBAAA,GAAA,EAAA;AACA;AACA,gBAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAFA,CAGA;;AACA,gBAAA,KAAA,GAAA,CAAA;AACA,YAAA,aAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,KAAA,IAAA,IAAA,CAAA,KAAA;AACA,aAFA;AAGA,gBAAA,MAAA,GAAA,EAAA;AACA,YAAA,aAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,MAAA,8BACA,IAAA,CAAA,IADA,cACA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA,KAAA,GAAA,GAAA,CAAA,GAAA,GADA,0CAAA;AAIA,aALA;AAMA,mBAAA,MAAA;AACA;AAlBA,SAVA;AA8BA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAFA;AAKA,UAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aADA;AAIA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA;AAJA;AALA,SADA;AA9BA,OAAA;AA+CA,WAAA,aAAA,CAAA,SAAA,CAAA,UAAA;AACA,KAnDA;AAoDA,IAAA,OApDA,mBAoDA,GApDA,EAoDA;AACA;AACA;AACA,WAAA,OAAA,GAAA,GAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA;AACA,WAAA,WAAA;AACA,KA1DA;AA2DA,IAAA,WA3DA,yBA2DA;AACA;AACA,UAAA,UAAA,GAAA,KAAA,OAAA,CAAA,KAAA,YAAA,EAAA,QAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA;AACA,OAFA,CAAA;AAGA,UAAA,UAAA,GAAA,KAAA,OAAA,CAAA,KAAA,YAAA,EAAA,QAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,KAFA;AAGA,UAAA,QAAA,EAAA,IAAA,CAAA,QAHA,CAGA;;AAHA,SAAA;AAKA,OANA,CAAA;AAOA,UAAA,UAAA,GAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAJA,OAAA;AAUA,WAAA,aAAA,CAAA,SAAA,CAAA,UAAA;AACA,KAlFA;AAmFA,IAAA,aAnFA,2BAmFA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,WAAA,GAAA,GAAA,GAAA,GAAA;AACA,UAAA,aAAA,GAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,KAAA;AADA;AADA,SADA;AAMA,QAAA,MAAA,EAAA;AACA,UAAA,SAAA,EAAA,KAAA,aADA;AAEA,UAAA,UAAA,EAAA,KAAA,aAFA;AAGA,UAAA,OAAA,EAAA,KAAA,aAAA,GAAA,CAHA;AAIA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,KAAA,aAAA,GAAA;AADA;AAJA,SANA;AAcA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,MAAA,EAAA,KAAA,aAAA,GAAA,GADA;AAEA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,KAAA;AAFA,SADA;AAdA,OAAA;AAqBA,WAAA,aAAA,CAAA,SAAA,CAAA,aAAA;AACA,WAAA,aAAA,CAAA,MAAA;AACA,KA5GA;AA6GA,IAAA,MA7GA,oBA6GA;AACA,WAAA,YAAA;;AACA,UAAA,KAAA,YAAA,GAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA;AACA;;AACA,WAAA,WAAA;AACA,KAnHA;AAoHA,IAAA,OApHA,qBAoHA;AACA,WAAA,YAAA;;AACA,UAAA,KAAA,YAAA,GAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,CAAA;AACA;;AACA,WAAA,WAAA;AACA;AA1HA,GA7CA;AAyKA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,WAAA,aAAA,CAAA,OAAA,GAFA,CAEA;;AACA,WAAA,SAAA,GAHA,CAGA;;AACA,WAAA,aAAA,GAJA,CAIA;;AACA,WAAA,WAAA,GALA,CAKA;AACA;AAPA;AAzKA,CAAA","sourcesContent":["<!-- 热销商品图表 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='hot_ref'></div>\n    <span class=\"iconfont arr-left\" @click=\"toLeft\" :style=\"comStyle\">&#xe6ef;</span>\n    <span class=\"iconfont arr-right\" @click=\"toRight\" :style=\"comStyle\">&#xe6ed;</span>\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { getThemeValue } from '@/utils/theme_utils'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      currentIndex: 0, // 当前所展示出的一级分类数据\n      titleFontSize: 0\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('hotData', this.getData)\n  },\n  computed: {\n    catName () {\n      if (!this.allData) {\n        return ''\n      } else {\n        return this.allData[this.currentIndex].name\n      }\n    },\n    comStyle () {\n      return {\n        fontSize: this.titleFontSize + 'px',\n        color: getThemeValue(this.theme).titleColor\n      }\n    },\n    ...mapState(['theme'])\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'hotData',\n      chartName: 'hot',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('hotData')\n  },\n  methods: {\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.hot_ref, this.theme)\n      const initOption = {\n        title: {\n          text: '▎ 热销商品的占比',\n          left: 20,\n          top: 20\n        },\n        legend: {\n          top: '15%',\n          icon: 'circle'\n        },\n        tooltip: {\n          show: true,\n          formatter: arg => {\n            // console.log(arg)\n            const thirdCategory = arg.data.children\n            // 计算出所有三级分类的数值总和\n            let total = 0\n            thirdCategory.forEach(item => {\n              total += item.value\n            })\n            let retStr = ''\n            thirdCategory.forEach(item => {\n              retStr += `\n              ${item.name}:${parseInt(item.value / total * 100) + '%'}\n              <br/>\n              `\n            })\n            return retStr\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            label: {\n              show: false\n            },\n            emphasis: {\n              label: {\n                show: true\n              },\n              labelLine: {\n                show: false\n              }\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(initOption)\n    },\n    getData (ret) {\n      // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n      // const { data: ret } = await this.$http.get('hotproduct')\n      this.allData = ret\n      console.log(this.allData)\n      this.updateChart()\n    },\n    updateChart () {\n      // 处理图表需要的数据\n      const legendData = this.allData[this.currentIndex].children.map(item => {\n        return item.name\n      })\n      const seriesData = this.allData[this.currentIndex].children.map(item => {\n        return {\n          name: item.name,\n          value: item.value,\n          children: item.children // 新增加children的原因是为了在tooltip中的formatter的回调函数中,来拿到这个二级分类下的三级分类数据\n        }\n      })\n      const dataOption = {\n        legend: {\n          data: legendData\n        },\n        series: [\n          {\n            data: seriesData\n          }\n        ]\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      this.titleFontSize = this.$refs.hot_ref.offsetWidth / 100 * 3.6\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: this.titleFontSize\n          }\n        },\n        legend: {\n          itemWidth: this.titleFontSize,\n          itemHeight: this.titleFontSize,\n          itemGap: this.titleFontSize / 2,\n          textStyle: {\n            fontSize: this.titleFontSize / 2\n          }\n        },\n        series: [\n          {\n            radius: this.titleFontSize * 4.5,\n            center: ['50%', '60%']\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    toLeft () {\n      this.currentIndex--\n      if (this.currentIndex < 0) {\n        this.currentIndex = this.allData.length - 1\n      }\n      this.updateChart()\n    },\n    toRight () {\n      this.currentIndex++\n      if (this.currentIndex > this.allData.length - 1) {\n        this.currentIndex = 0\n      }\n      this.updateChart()\n    }\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n.arr-left {\n  position:absolute;\n  left: 10%;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: white;\n}\n.arr-right {\n  position:absolute;\n  right: 10%;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: white;\n}\n.cat-name {\n  position:absolute;\n  left: 80%;\n  bottom: 20px;\n  color: white;\n}\n</style>\n"],"sourceRoot":"src/components"}]}