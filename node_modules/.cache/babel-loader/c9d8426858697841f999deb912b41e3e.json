{"remainingRequest":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\src\\components\\Map.vue","mtime":1602319182000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\projects\\vision-project\\vision原版\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 商家分布图表 -->\n<template>\n  <div class='com-container' @dblclick=\"revertMap\">\n    <div class='com-chart' ref='map_ref'></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport axios from 'axios'\nimport { getProvinceMapInfo } from '@/utils/map_utils'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      mapData: {} // 所获取的省份的地图矢量数据\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('mapData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'mapData',\n      chartName: 'map',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('mapData')\n  },\n  methods: {\n    async initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.map_ref, this.theme)\n      // 获取中国地图的矢量数据\n      // http://localhost:8999/static/map/china.json\n      // 由于我们现在获取的地图矢量数据并不是位于KOA2的后台, 所以咱们不能使用this.$http\n      const ret = await axios.get('http://localhost:8999/static/map/china.json')\n      this.$echarts.registerMap('china', ret.data)\n      const initOption = {\n        title: {\n          text: '▎ 商家分布',\n          left: 20,\n          top: 20\n        },\n        geo: {\n          type: 'map',\n          map: 'china',\n          top: '5%',\n          bottom: '5%',\n          itemStyle: {\n            areaColor: '#2E72BF',\n            borderColor: '#333'\n          }\n        },\n        legend: {\n          left: '5%',\n          bottom: '5%',\n          orient: 'vertical'\n        }\n      }\n      this.chartInstance.setOption(initOption)\n      this.chartInstance.on('click', async arg => {\n        // arg.name 得到所点击的省份, 这个省份他是中文\n        const provinceInfo = getProvinceMapInfo(arg.name)\n        console.log(provinceInfo)\n        // 需要获取这个省份的地图矢量数据\n        // 判断当前所点击的这个省份的地图矢量数据在mapData中是否存在\n        if (!this.mapData[provinceInfo.key]) {\n          const ret = await axios.get('http://localhost:8999' + provinceInfo.path)\n          this.mapData[provinceInfo.key] = ret.data\n          this.$echarts.registerMap(provinceInfo.key, ret.data)\n        }\n        const changeOption = {\n          geo: {\n            map: provinceInfo.key\n          }\n        }\n        this.chartInstance.setOption(changeOption)\n      })\n    },\n    getData (ret) {\n      // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n      // const { data: ret } = await this.$http.get('map')\n      this.allData = ret\n      console.log(this.allData)\n      this.updateChart()\n    },\n    updateChart () {\n      // 处理图表需要的数据\n      // 图例的数据\n      const legendArr = this.allData.map(item => {\n        return item.name\n      })\n      const seriesArr = this.allData.map(item => {\n        // return的这个对象就代表的是一个类别下的所有散点数据\n        // 如果想在地图中显示散点的数据, 我们需要给散点的图表增加一个配置, coordinateSystem:geo\n        return {\n          type: 'effectScatter',\n          rippleEffect: {\n            scale: 5,\n            brushType: 'stroke'\n          },\n          name: item.name,\n          data: item.children,\n          coordinateSystem: 'geo'\n        }\n      })\n      const dataOption = {\n        legend: {\n          data: legendArr\n        },\n        series: seriesArr\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      const titleFontSize = this.$refs.map_ref.offsetWidth / 100 * 3.6\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        legend: {\n          itemWidth: titleFontSize / 2,\n          itemHeight: titleFontSize / 2,\n          itemGap: titleFontSize / 2,\n          textStyle: {\n            fontSize: titleFontSize / 2\n          }\n        }\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    // 回到中国地图\n    revertMap () {\n      const revertOption = {\n        geo: {\n          map: 'china'\n        }\n      }\n      this.chartInstance.setOption(revertOption)\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/components"}]}